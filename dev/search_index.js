var documenterSearchIndex = {"docs":
[{"location":"usage/#Usage","page":"Usage","title":"Usage","text":"","category":"section"},{"location":"usage/","page":"Usage","title":"Usage","text":"This package provides simple Web APIs to communicate with Sony Aibo ERS-1000 in Julia language\nRegister Aibo Developer program to acquire your AccessToken to talk with Aibo ERS-1000\nRefer to Documentation for Sony Aibo Web API","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"Sample code:","category":"page"},{"location":"usage/","page":"Usage","title":"Usage","text":"using SimpleAiboWebAPI\n\nyourAccessToken = \"\"  # your Access Token here\ngetDeviceList(yourAccessToken)  # Register your access token, and receive device list\n\n# The default target device is the first device found in the device list.\naskAction(\"hungry_status\")\naskHungryStatus()  # advanced API\n\n# Supply API arguments by Dict()\naskAction(\"change_posture\", Dict(\"FinalPosture\" => \"sit\"))\naskChangePosture(\"sit\")  # advanced API\n\n# Specify the target device by his/her nickname\naskAction(\"hungry_status\", target_nickname=\"aibo_nickname\")\naskHungryStatus(target_nickname=\"aibo_nickname\")  # advanced API\n\n# Set (change) the default device specified by his/her nickname\nsetDefaultDevice(target_nickname=\"aibo_nickname\")","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"List of APIs defined in SimpleAiboWebAPI.","category":"page"},{"location":"reference/#Setup-APIs","page":"Reference","title":"Setup APIs","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"getDeviceList","category":"page"},{"location":"reference/#SimpleAiboWebAPI.getDeviceList","page":"Reference","title":"SimpleAiboWebAPI.getDeviceList","text":"getDeviceList(accessToken)\n\ntries to get device list associated to accessToken.\n\nIf successful, \n\nreturns device list of type Array{Dict}.\nassigns accessToken to currentAccessToken, the local variable.\nif non-empty device list is found, updates currentDeviceList and defaultDevice. Namely,\nassigns found device list to currentDeviceList, the local variable.\nassigns the first element of currentDeviceList to defaultDevice, the local variable, if currentDeviceList is not empty.\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"getAccessToken","category":"page"},{"location":"reference/#SimpleAiboWebAPI.getAccessToken","page":"Reference","title":"SimpleAiboWebAPI.getAccessToken","text":"getAccessToken()\n\nreturns the current access token, i.e., currentAccessToken, the local variable of this package.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Basic-APIs","page":"Reference","title":"Basic APIs","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"getCurrentDeviceList","category":"page"},{"location":"reference/#SimpleAiboWebAPI.getCurrentDeviceList","page":"Reference","title":"SimpleAiboWebAPI.getCurrentDeviceList","text":"getCurrentDeviceList()\n\nreturns the current device list, i.e., getCurrentDeviceList, the local variable of this package.\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"getDefaultDevice","category":"page"},{"location":"reference/#SimpleAiboWebAPI.getDefaultDevice","page":"Reference","title":"SimpleAiboWebAPI.getDefaultDevice","text":"getDefaultDevice()\n\nreturns the default device to which the WebAPI directs when target device is not specified in the call of askAction function.\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"getDefaultDeviceId","category":"page"},{"location":"reference/#SimpleAiboWebAPI.getDefaultDeviceId","page":"Reference","title":"SimpleAiboWebAPI.getDefaultDeviceId","text":"getDefaultDeviceId()\n\nreturns the deviceId of the default device.\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"getDefaultDeviceNickname","category":"page"},{"location":"reference/#SimpleAiboWebAPI.getDefaultDeviceNickname","page":"Reference","title":"SimpleAiboWebAPI.getDefaultDeviceNickname","text":"getDefaultDeviceNickname()\n\nreturns the nickname of the default device.\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"findDevice","category":"page"},{"location":"reference/#SimpleAiboWebAPI.findDevice","page":"Reference","title":"SimpleAiboWebAPI.findDevice","text":"findDevice(;deviceId=nothing, nickname=nothing)\n\nreturns a device whose deviceID and/or nickname key(s) match(es) the corresponding parameter(s).\n\nReturns the result of getDefaultDevice() if both parameters are omitted.\nReturns Dict() if such a device is absent. \n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"setDefaultDevice","category":"page"},{"location":"reference/#SimpleAiboWebAPI.setDefaultDevice","page":"Reference","title":"SimpleAiboWebAPI.setDefaultDevice","text":"setDefaultDeviceNickname(;target_deviceId=nothing, target_nickname=nothing)\n\nassigns the default device to the result of findDevice(deviceId=target_deviceId, nickname=target_nickname).\n\nThe default device remains unchanged if such a device is absent.\n\n\n\n\n\n","category":"function"},{"location":"reference/#Action-APIs","page":"Reference","title":"Action APIs","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"askActionSimple","category":"page"},{"location":"reference/#SimpleAiboWebAPI.askActionSimple","page":"Reference","title":"SimpleAiboWebAPI.askActionSimple","text":"askActionSimple(\n  api_name,\n  arguments,\n  target_deviceId,\n  timeoutLimit = 10)\n\nasks a device to perform an action, and returns the result by Dict().\n\napi_name and arguments specify the action and arguments.\ntarget_deviceId specifies the deviceId of the target device.\nIf timeoutLimit <= 0, immediately returns executionId.\nOtherwise, invokes getExecution(executionId, timeoutLimit).\ntimeoutLimit specifies the limit of timeouts in seconds, and defaults to 10 (seconds).\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"askAction","category":"page"},{"location":"reference/#SimpleAiboWebAPI.askAction","page":"Reference","title":"SimpleAiboWebAPI.askAction","text":"askAction(\n  api_name,\n  arguments = Dict(); \n  target_deviceID=nothing,\n  target_nickname=nothing,\n  timeoutLimit=10)\n\nasks a device to perform an action, and returns the result by Dict().\n\napi_name and arguments specify the action and arguments.\narguments is optional, defaults to Dict().\ntarget device to which the Web API directs are determined as follows using two optional keyword arguments, target_deviceId and target_nickname\nthe result of getDefaultDevice() if both parameters are omitted.\nthe result of findDevice(deviceId=target_deviceID, nickname=target_nickname) if either or both parameters are present.\nIf timeoutLimit <= 0, immediately returns executionId.\nOtherwise, invokes getExecution(executionId, timeoutLimit).\ntimeoutLimit specifies the limit of timeouts in seconds, and defauls to 10 (seconds).\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"getExecution","category":"page"},{"location":"reference/#SimpleAiboWebAPI.getExecution","page":"Reference","title":"SimpleAiboWebAPI.getExecution","text":"getExecution(\n  executionId, \n  timeoutLimit=10 )\n\nreceives the result of executionId.\n\ntimeoutLimit specifies the limit of timeouts in seconds, and defaults to 10 (seconds).\n\n\n\n\n\n","category":"function"},{"location":"reference/#Advanced-APIs","page":"Reference","title":"Advanced APIs","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"All the advanced API contain \"api_name\" inside.\nAll the advanced API have following three optional keyword arguments, as askAction has.\ntarget_deviceID\ntarget_nickname\nAbove two arguments are hints to determine target device.\ntimeoutLimit","category":"page"},{"location":"reference/","page":"Reference","title":"Reference","text":"askHungryStatus","category":"page"},{"location":"reference/#SimpleAiboWebAPI.askHungryStatus","page":"Reference","title":"SimpleAiboWebAPI.askHungryStatus","text":"askHungryStatus(;\n  target_deviceID=nothing,\n  target_nickname=nothing,\n  timeoutLimit=10)\n\nasks hungry_status.\n\nThis method is equivalent to askAction(\"hungry_status\")\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"askSleepyStatus","category":"page"},{"location":"reference/#SimpleAiboWebAPI.askSleepyStatus","page":"Reference","title":"SimpleAiboWebAPI.askSleepyStatus","text":"askSleepyStatus(;\n  target_deviceID=nothing,\n  target_nickname=nothing,\n  timeoutLimit=10)\n\nasks sleepy_status.\n\nThis method is equivalent to askAction(\"sleepy_status\")\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"askPostureStatus","category":"page"},{"location":"reference/#SimpleAiboWebAPI.askPostureStatus","page":"Reference","title":"SimpleAiboWebAPI.askPostureStatus","text":"askPostureStatus(;\n  target_deviceID=nothing,\n  target_nickname=nothing,\n  timeoutLimit=10)\n\nasks posture_status.\n\nThis method is equivalent to askAction(\"posture_status\")\n\n\n\n\n\n","category":"function"},{"location":"reference/","page":"Reference","title":"Reference","text":"askChangePosture","category":"page"},{"location":"reference/#SimpleAiboWebAPI.askChangePosture","page":"Reference","title":"SimpleAiboWebAPI.askChangePosture","text":"askChangePosture(\n  finalPosture,\n  enquee=false;\n  target_deviceID=nothing,\n  target_nickname=nothing,\n  timeoutLimit=10)\n\nasks change_posture.\n\nfinalPosture should be one of the following string:\nback\ncrouch\ndown\ndown_and_lengthen_behind\ndown_and_shorten_behind\nsit_and_raise__both_hands\nsit\nsleep\nstand\nstand_straight\n\nThis method is equivalent to askAction(\"change_posture\", Dict(FinalPosture=>finalPosture, Enqueue=>enqueue))\n\n\n\n\n\n","category":"function"},{"location":"reference/#Alphabetical-Index","page":"Reference","title":"Alphabetical Index","text":"","category":"section"},{"location":"reference/","page":"Reference","title":"Reference","text":"","category":"page"},{"location":"usageja/#使い方","page":"使い方","title":"使い方","text":"","category":"section"},{"location":"usageja/","page":"使い方","title":"使い方","text":"Julia言語を用いて、aibo ERS-1000と対話するためのパッケージです\naibo Developer Siteに登録し、アクセストークンを取得してください\nSony Aibo Web API を読んでください.","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"Sample code:","category":"page"},{"location":"usageja/","page":"使い方","title":"使い方","text":"using SimpleAiboWebAPI\n\nyourAccessToken = \"\"  # アクセストークン文字列\ngetDeviceList(yourAccessToken)  # アクセストークンを登録し、デバイスリストを取得します\n\n# 既定の通信先デバイスは、デバイスリストで最初に見つかったデバイスです\naskAction(\"hungry_status\")\naskHungryStatus()  # advanced API\n\n# API引数は Dict()で指定します\naskAction(\"change_posture\", Dict(\"FinalPosture\" => \"sit\"))\naskChangePosture(\"sit\")  # advanced API\n\n# aiboの名前で、通信先デバイスを指定できます\naskAction(\"hungry_status\", target_nickname=\"aibo_nickname\")\naskHungryStatus(target_nickname=\"aibo_nickname\")  # advanced API\n\n# aiboの名前で、既定の通信先デバイスを指定（変更）できます\nsetDefaultDevice(target_nickname=\"aibo_nickname\")","category":"page"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = SimpleAiboWebAPI","category":"page"},{"location":"#SimpleAiboWebAPI","page":"Home","title":"SimpleAiboWebAPI","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Simple Web API to communicate with Sony Aibo ERS-1000 in Julia language.","category":"page"},{"location":"","page":"Home","title":"Home","text":"<p align=\"center\">\nJulia meets Aibo !\n<br/>\n<img src=\"assets/JuliaMeetsAibo.png\" alt=\"\" title=\"Julia meets Aibo\" width=\"450\" />\n<br/>\nAibo meets Julia !\n\n</p>","category":"page"}]
}
